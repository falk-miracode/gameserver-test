# Multi-stage build for Frontend
FROM node:22 AS build
WORKDIR /usr/src/app
RUN corepack enable

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/schemas/package.json ./packages/schemas/
COPY packages/frontend/package.json ./packages/frontend/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY packages/schemas/ ./packages/schemas/
COPY packages/frontend/ ./packages/frontend/

# Build schemas first, then frontend
RUN pnpm build:schemas && pnpm build:frontend

# Production stage with nginx
FROM nginx:alpine AS runtime
COPY --from=build /usr/src/app/packages/frontend/dist /usr/share/nginx/html

# Copy nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files \$uri \$uri/ /index.html;
    }

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
}
EOF

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
